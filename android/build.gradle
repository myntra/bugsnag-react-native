apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:all" << "-Werror"
    }
}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 4
        versionName '2.21.0'
        consumerProguardFiles 'proguard-rules.pro'
    }
    buildTypes {
        debug {}
        qa {}
        fox {}
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api 'com.bugsnag:bugsnag-android:4.15.0'
    implementation project(':react-native')
}

apply plugin: 'checkstyle'

checkstyle {
    toolVersion = "8.18"
}

task("checkstyle", type: Checkstyle) {
    configFile rootProject.file("config/checkstyle/checkstyle.xml")
    source  "src/"
    include "**/*.java"
    exclude "**/external/**/*.java"
    classpath = files()
}
